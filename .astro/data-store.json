[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.12","content-config-digest","89dc93d2a60716b0","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://example.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,70,71,101,102,135,136,180,181],"1",{"id":11,"data":13,"body":18,"filePath":19,"digest":20,"rendered":21},{"title":14,"description":15,"pubDate":16,"heroImage":17},"Neovim Neden Günlük Kullandığım Editör Haline Geldi","Neovim",["Date","2025-05-01T21:00:00.000Z"],"/lazyvim.png","Geliştiriciler arasında metin editörü seçimi bir tartışma konusu olmaktan ziyade, bir öz kimlik beyanı haline geldi. Kimileri Visual Studio Code’un eklenti zenginliğine, kimileri ise JetBrains IDE’lerinin kapsamlı özelliklerine bağlı kalırken, ben Neovim’i tercih ettim. Bu makalede, Neovim’i neden benimsediğimi ve günlük çalışma akışımda bana nasıl fayda sağladığını anlatacağım.\n\n##### Minimalizm ve Hızlı Performans\n\n[Neovim](https://neovim.io/), minimal bir yapı sunar. Modern metin editörlerinde bulunan çok sayıdaki görsel arayüz elementleri yerine, saf ve etkili bir metin işleme deneyimi sağlar. Bunun bir sonucu olarak, Neovim hem çok daha hızlı çalışır hem de kaynak kullanımı açısından hafiftir. Bilgisayarınızın kaynaklarını zorlamadan etkili bir şekilde kod yazabilirsiniz.\n\n##### Özelleştirilebilirlik\n\nBir diğer büyük avantajı, Neovim’in tamamen özelleştirilebilir bir yapıya sahip olmasıdır. Kendi ihtiyaçlarınıza göre anahtar atamaları, renk temaları ve eklentilerle çalışma ortamınızı şekillendirebilirsiniz. LazyVim gibi önceden ayarlanabilir eklenti paketlerini kullanarak zamandan tasarruf edebilirsiniz.\n\n##### LazyVim ile Verimlilik\n\n[LazyVim](https://www.lazyvim.org/), Neovim’in özelleştirilebilirliğini öne çıkaran harika bir aracıdır. LazyVim sayesinde Neovim’i kurmak ve kullanmak çok daha kolay bir hale geliyor. Özellikle karmaşık yapılandırma süreçlerinden kaçınmak isteyen geliştiriciler için bu büyük bir avantaj.\n\n##### Fzf ile Hızlı Arama\n\nNeovim, [Fzf](https://github.com/junegunn/fzf) (“Fuzzy Finder”) gibi eklentilerle dosya ve metin aramalarını çok daha hızlı hale getirebilir. Bu, özellikle büyük projelerde zaman kazandırır ve aradığınız içeriğe anında ulaşmanızı sağlar.\n\n##### Kısayol Tuşları ile Verimlilik\n\nNeovim’in klavye kısayolları, kodlama sürecini çok daha akıcı hale getiriyor.\nİşte bazı örnekler:\n\n##### 🧭 Navigasyon\n\n```markdown\n| Tuş                 | Eylem                                                            |\n| ------------------- | ---------------------------------------------------------------- |\n| `h`, `j`, `k`, `l`  | Sola, aşağı, yukarı, sağa hareket et                             |\n| `w` / `W`           | Kelime bazında ileri git (W: boşlukla ayrılmış kelimeler)        |\n| `b` / `B`           | Kelime bazında geri git                                          |\n| `0` / `^` / `$`     | Satırın başına / boşluk olmayan ilk karaktere / satır sonuna git |\n| `gg` / `G`          | Dosyanın başına / sonuna git                                     |\n| `Ctrl-d` / `Ctrl-u` | Sayfanın yarısı kadar aşağı / yukarı kaydır                      |\n| `%`                 | Eşleşen paranteze veya süslü paranteze atla                      |\n```\n\n##### ✏️  Düzenleme\n\n```markdown\n| Tuş       | Eylem                                      |\n| --------- | ------------------------------------------ |\n| `i` / `I` | Ekleme moduna geç / Satır başında ekleme   |\n| `a` / `A` | İmleçten sonra ekle / Satır sonunda ekle   |\n| `o` / `O` | Alt satıra / Üst satıra yeni satır aç      |\n| `x` / `X` | İmleç altındaki / önceki karakteri sil     |\n| `dd`      | Mevcut satırı sil (kes)                    |\n| `yy`      | Mevcut satırı kopyala                      |\n| `p` / `P` | Kopyalananı imleçten sonra / önce yapıştır |\n| `u`       | Son işlemi geri al                         |\n| `Ctrl-r`  | Geri alınanı tekrar yap                    |\n```\n\n##### 🔍 Arama ve Değiştirme\n\n```markdown\n| Tuş                 | Eylem                                                       |\n| ------------------- | ----------------------------------------------------------- |\n| `/kelime`           | İleriye doğru kelime ara                                    |\n| `?kelime`           | Geriye doğru kelime ara                                     |\n| `n` / `N`           | Aramayı aynı yönde / ters yönde tekrar et                   |\n| `:%s/eskisi/yeni/g` | Dosya içindeki tüm `eskisi` ifadelerini `yeni` ile değiştir |\n| `:noh`              | Arama vurgusunu temizle                                     |\n```\n\n##### 🎯 Faydalı Komutlar\n\n```markdown\n| Komut                 | Eylem                                        |\n| --------------------- | -------------------------------------------- |\n| `:e dosya_adi`        | Bir dosya aç                                 |\n| `:w` / `:q` / `:wq`   | Kaydet / çık / kaydet ve çık                 |\n| `:vsp dosya_adi`      | Dikey bölme ile dosya aç                     |\n| `:sp dosya_adi`       | Yatay bölme ile dosya aç                     |\n| `Ctrl-w h/j/k/l`      | Bölmeler arasında sola/aşağı/↑/sağa geçiş    |\n| `:buffers` / `:bnext` | Açık tamponları göster / sonraki tampona geç |\n```\n\n##### 🔁 Makro\n\n```markdown\n| Tuş  | Eylem                                    |\n| ---- | ---------------------------------------- |\n| `qa` | `a` kayıt alanına makro kaydetmeye başla |\n| `@a` | `a` kayıt alanındaki makroyu çalıştır    |\n| `@@` | Son kullanılan makroyu tekrar et         |\n```\n\n##### Topluluk ve Belgeleme\n\nNeovim, aktif bir topluluğa ve zengin bir belgeleme kaynağına sahiptir. Karşılaştığınız herhangi bir sorunla ilgili destek almak çok kolaydır; topluluk forumları, GitHub depoları ve kılavuzlar sayesinde çözüm bulabilirsiniz.\n\n##### Daha Derin Bir Bağlantı\n\nNeovim kullanmak, araçlarınızla daha derin bir bağlantı kurmanıza yardımcı olur. Kendi tuş eşlemelerinizi ve eklentilerinizi oluşturmak, kodlama sürecinizi bir ustalık seviyesine taşır. Bu özelleştirmeler, çalışma tarzınıza en uygun hale getirilmiş bir ortam yaratmanıza olanak tanır, böylece verimliliğinizi ve iş akışınızı iyileştirirsiniz.\n\n##### Sonuç\n\nNeovim, basit bir metin düzenleyiciden çok daha fazlasıdır—geliştiricilere iş akışlarında tam kontrol ve özgürlük sunar. Eğer geliştirme sürecinizi iyileştirmek ve daha minimal bir deneyim yaşamak istiyorsanız, kesinlikle Neovim'i denemelisiniz. Bu araç, özelleştirme seçenekleri ve verimli çalışma imkanı ile kodlama deneyiminizi daha keyifli ve etkili hale getirebilir.","src/content/blog/1.md","9c429f9ef5b3d5f2",{"html":22,"metadata":23},"\u003Cp>Geliştiriciler arasında metin editörü seçimi bir tartışma konusu olmaktan ziyade, bir öz kimlik beyanı haline geldi. Kimileri Visual Studio Code’un eklenti zenginliğine, kimileri ise JetBrains IDE’lerinin kapsamlı özelliklerine bağlı kalırken, ben Neovim’i tercih ettim. Bu makalede, Neovim’i neden benimsediğimi ve günlük çalışma akışımda bana nasıl fayda sağladığını anlatacağım.\u003C/p>\n\u003Ch5 id=\"minimalizm-ve-hızlı-performans\">Minimalizm ve Hızlı Performans\u003C/h5>\n\u003Cp>\u003Ca href=\"https://neovim.io/\">Neovim\u003C/a>, minimal bir yapı sunar. Modern metin editörlerinde bulunan çok sayıdaki görsel arayüz elementleri yerine, saf ve etkili bir metin işleme deneyimi sağlar. Bunun bir sonucu olarak, Neovim hem çok daha hızlı çalışır hem de kaynak kullanımı açısından hafiftir. Bilgisayarınızın kaynaklarını zorlamadan etkili bir şekilde kod yazabilirsiniz.\u003C/p>\n\u003Ch5 id=\"özelleştirilebilirlik\">Özelleştirilebilirlik\u003C/h5>\n\u003Cp>Bir diğer büyük avantajı, Neovim’in tamamen özelleştirilebilir bir yapıya sahip olmasıdır. Kendi ihtiyaçlarınıza göre anahtar atamaları, renk temaları ve eklentilerle çalışma ortamınızı şekillendirebilirsiniz. LazyVim gibi önceden ayarlanabilir eklenti paketlerini kullanarak zamandan tasarruf edebilirsiniz.\u003C/p>\n\u003Ch5 id=\"lazyvim-ile-verimlilik\">LazyVim ile Verimlilik\u003C/h5>\n\u003Cp>\u003Ca href=\"https://www.lazyvim.org/\">LazyVim\u003C/a>, Neovim’in özelleştirilebilirliğini öne çıkaran harika bir aracıdır. LazyVim sayesinde Neovim’i kurmak ve kullanmak çok daha kolay bir hale geliyor. Özellikle karmaşık yapılandırma süreçlerinden kaçınmak isteyen geliştiriciler için bu büyük bir avantaj.\u003C/p>\n\u003Ch5 id=\"fzf-ile-hızlı-arama\">Fzf ile Hızlı Arama\u003C/h5>\n\u003Cp>Neovim, \u003Ca href=\"https://github.com/junegunn/fzf\">Fzf\u003C/a> (“Fuzzy Finder”) gibi eklentilerle dosya ve metin aramalarını çok daha hızlı hale getirebilir. Bu, özellikle büyük projelerde zaman kazandırır ve aradığınız içeriğe anında ulaşmanızı sağlar.\u003C/p>\n\u003Ch5 id=\"kısayol-tuşları-ile-verimlilik\">Kısayol Tuşları ile Verimlilik\u003C/h5>\n\u003Cp>Neovim’in klavye kısayolları, kodlama sürecini çok daha akıcı hale getiriyor.\nİşte bazı örnekler:\u003C/p>\n\u003Ch5 id=\"-navigasyon\">🧭 Navigasyon\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| Tuş                 | Eylem                                                            |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| ------------------- | ---------------------------------------------------------------- |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`h`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">`j`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">`k`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">`l`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">  | Sola, aşağı, yukarı, sağa hareket et                             |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`w`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`W`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">           | Kelime bazında ileri git (W: boşlukla ayrılmış kelimeler)        |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`b`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`B`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">           | Kelime bazında geri git                                          |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`0`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`^`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`$`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">     | Satırın başına / boşluk olmayan ilk karaktere / satır sonuna git |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`gg`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`G`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">          | Dosyanın başına / sonuna git                                     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`Ctrl-d`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`Ctrl-u`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Sayfanın yarısı kadar aşağı / yukarı kaydır                      |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`%`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">                 | Eşleşen paranteze veya süslü paranteze atla                      |\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"️--düzenleme\">✏️  Düzenleme\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| Tuş       | Eylem                                      |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| --------- | ------------------------------------------ |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`i`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`I`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Ekleme moduna geç / Satır başında ekleme   |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`a`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`A`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | İmleçten sonra ekle / Satır sonunda ekle   |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`o`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`O`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Alt satıra / Üst satıra yeni satır aç      |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`x`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`X`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | İmleç altındaki / önceki karakteri sil     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`dd`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">      | Mevcut satırı sil (kes)                    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`yy`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">      | Mevcut satırı kopyala                      |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`p`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`P`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Kopyalananı imleçten sonra / önce yapıştır |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`u`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">       | Son işlemi geri al                         |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`Ctrl-r`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">  | Geri alınanı tekrar yap                    |\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"-arama-ve-değiştirme\">🔍 Arama ve Değiştirme\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| Tuş                 | Eylem                                                       |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| ------------------- | ----------------------------------------------------------- |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`/kelime`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">           | İleriye doğru kelime ara                                    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`?kelime`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">           | Geriye doğru kelime ara                                     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`n`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`N`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">           | Aramayı aynı yönde / ters yönde tekrar et                   |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:%s/eskisi/yeni/g`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Dosya içindeki tüm \u003C/span>\u003Cspan style=\"color:#79B8FF\">`eskisi`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ifadelerini \u003C/span>\u003Cspan style=\"color:#79B8FF\">`yeni`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ile değiştir |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:noh`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">              | Arama vurgusunu temizle                                     |\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"-faydalı-komutlar\">🎯 Faydalı Komutlar\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| Komut                 | Eylem                                        |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| --------------------- | -------------------------------------------- |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:e dosya_adi`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">        | Bir dosya aç                                 |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:w`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:q`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:wq`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">   | Kaydet / çık / kaydet ve çık                 |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:vsp dosya_adi`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">      | Dikey bölme ile dosya aç                     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:sp dosya_adi`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">       | Yatay bölme ile dosya aç                     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`Ctrl-w h/j/k/l`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">      | Bölmeler arasında sola/aşağı/↑/sağa geçiş    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:buffers`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#79B8FF\">`:bnext`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Açık tamponları göster / sonraki tampona geç |\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"-makro\">🔁 Makro\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"markdown\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| Tuş  | Eylem                                    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| ---- | ---------------------------------------- |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`qa`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | \u003C/span>\u003Cspan style=\"color:#79B8FF\">`a`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> kayıt alanına makro kaydetmeye başla |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`@a`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | \u003C/span>\u003Cspan style=\"color:#79B8FF\">`a`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> kayıt alanındaki makroyu çalıştır    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">| \u003C/span>\u003Cspan style=\"color:#79B8FF\">`@@`\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> | Son kullanılan makroyu tekrar et         |\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"topluluk-ve-belgeleme\">Topluluk ve Belgeleme\u003C/h5>\n\u003Cp>Neovim, aktif bir topluluğa ve zengin bir belgeleme kaynağına sahiptir. Karşılaştığınız herhangi bir sorunla ilgili destek almak çok kolaydır; topluluk forumları, GitHub depoları ve kılavuzlar sayesinde çözüm bulabilirsiniz.\u003C/p>\n\u003Ch5 id=\"daha-derin-bir-bağlantı\">Daha Derin Bir Bağlantı\u003C/h5>\n\u003Cp>Neovim kullanmak, araçlarınızla daha derin bir bağlantı kurmanıza yardımcı olur. Kendi tuş eşlemelerinizi ve eklentilerinizi oluşturmak, kodlama sürecinizi bir ustalık seviyesine taşır. Bu özelleştirmeler, çalışma tarzınıza en uygun hale getirilmiş bir ortam yaratmanıza olanak tanır, böylece verimliliğinizi ve iş akışınızı iyileştirirsiniz.\u003C/p>\n\u003Ch5 id=\"sonuç\">Sonuç\u003C/h5>\n\u003Cp>Neovim, basit bir metin düzenleyiciden çok daha fazlasıdır—geliştiricilere iş akışlarında tam kontrol ve özgürlük sunar. Eğer geliştirme sürecinizi iyileştirmek ve daha minimal bir deneyim yaşamak istiyorsanız, kesinlikle Neovim’i denemelisiniz. Bu araç, özelleştirme seçenekleri ve verimli çalışma imkanı ile kodlama deneyiminizi daha keyifli ve etkili hale getirebilir.\u003C/p>",{"headings":24,"localImagePaths":65,"remoteImagePaths":66,"frontmatter":67,"imagePaths":69},[25,29,32,35,38,41,44,47,50,53,56,59,62],{"depth":26,"slug":27,"text":28},5,"minimalizm-ve-hızlı-performans","Minimalizm ve Hızlı Performans",{"depth":26,"slug":30,"text":31},"özelleştirilebilirlik","Özelleştirilebilirlik",{"depth":26,"slug":33,"text":34},"lazyvim-ile-verimlilik","LazyVim ile Verimlilik",{"depth":26,"slug":36,"text":37},"fzf-ile-hızlı-arama","Fzf ile Hızlı Arama",{"depth":26,"slug":39,"text":40},"kısayol-tuşları-ile-verimlilik","Kısayol Tuşları ile Verimlilik",{"depth":26,"slug":42,"text":43},"-navigasyon","🧭 Navigasyon",{"depth":26,"slug":45,"text":46},"️--düzenleme","✏️  Düzenleme",{"depth":26,"slug":48,"text":49},"-arama-ve-değiştirme","🔍 Arama ve Değiştirme",{"depth":26,"slug":51,"text":52},"-faydalı-komutlar","🎯 Faydalı Komutlar",{"depth":26,"slug":54,"text":55},"-makro","🔁 Makro",{"depth":26,"slug":57,"text":58},"topluluk-ve-belgeleme","Topluluk ve Belgeleme",{"depth":26,"slug":60,"text":61},"daha-derin-bir-bağlantı","Daha Derin Bir Bağlantı",{"depth":26,"slug":63,"text":64},"sonuç","Sonuç",[],[],{"title":14,"description":15,"pubDate":68,"heroImage":17},"May 02 2025",[],"2",{"id":70,"data":72,"body":77,"filePath":78,"digest":79,"rendered":80},{"title":73,"description":74,"pubDate":75,"heroImage":76},"React, Vue ve Diğer Frontend Kütüphanelerinin Ardındaki Temel Gerçek: Pure HTML, CSS ve JavaScript ile Yapılabilecekler","Pure HTML, CSS ve Javascript",["Date","2025-05-02T21:00:00.000Z"],"/html_css_js.png","Frontend geliştirme dünyasında, React, Vue, Angular gibi modern kütüphaneler büyük bir popülarite kazandı. Bu kütüphaneler, dinamik ve etkileşimli kullanıcı arayüzleri geliştirmeyi oldukça kolaylaştırıyor. Ancak, bu kütüphanelerin sunduğu avantajların çoğu, aslında modern JavaScript'in ve web tarayıcılarının sunduğu özelliklerle mümkündür. Bu makalede, bu popüler kütüphanelerin sunduğu özelliklerin aslında pure HTML, CSS ve JavaScript ile nasıl yapılabileceğini keşfedeceğiz.\n\n##### Bölüm 1: React ve Vue'un Temel Felsefesi\n\n- React ve Vue, temelde bileşen tabanlı yaklaşımlar sunar. Her bileşen, kendi içinde bağımsızdır ve yalnızca veriye bağlı olarak güncellenir.\n- React, \"virtual DOM\" kullanarak DOM manipülasyonlarını optimize eder. Ancak, aynı şey JavaScript ve DOM API'leri kullanılarak manuel olarak da yapılabilir.\n- Vue, reaktif veri bağlama sunarak DOM güncellemelerini otomatikleştirir. Bu tür bir reaktiviteyi manuel olarak JavaScript ile de sağlamak mümkündür.\n\n**Örnek Kod:**\n```js\n\u003Cdiv id=\"list\">\u003C/div>\n\u003Cbutton onclick=\"updateListOptimized()\">Optimize Güncelle\u003C/button>\n\n\u003Cscript>\n  let currentData = [1, 2, 3];\n\n  // OPTİMİZE: Sadece değişen elemanları günceller ✅\n  function updateListOptimized() {\n    const newData = [1, 4, 3];\n    const list = document.getElementById(\"list\");\n    const currentItems = Array.from(list.children);\n\n    // Her elemanı karşılaştır\n    newData.forEach((newItem, index) => {\n      if (currentItems[index]) {\n        // Eleman zaten varsa ve değişmişse güncelle\n        if (currentItems[index].textContent !== String(newItem)) {\n          currentItems[index].textContent = newItem; // Sadece metni değiştir\n        }\n      } else {\n        // Yeni eleman ekle\n        const li = document.createElement(\"li\");\n        li.textContent = newItem;\n        list.appendChild(li);\n      }\n    });\n\n    // Fazladan eleman varsa sil\n    while (currentItems.length > newData.length) {\n      list.removeChild(list.lastChild);\n    }\n  }\n\n  // İlk yükleme\n  updateListOptimized();\n\u003C/script>\n```\n\n##### Bölüm 2: Pure HTML, CSS ve JavaScript ile React ve Vue Özellikleri\n\n**1. Bileşen Yapısı:**\n  - Modern JavaScript ile, class yapıları kullanarak bileşenler oluşturabiliriz. render fonksiyonları ve veri bağlamaları, DOM manipülasyonlarıyla taklit edilebilir.\n\n**Örnek Kod:**\n```js\n\u003Cdiv id=\"app\">\u003C/div>\n\n\u003Cscript>\n  // Temel Bileşen Sınıfı (React'ten ilham alınmıştır)\n  class Component {\n    constructor(props = {}, rootElementId) {\n      this.props = props;\n      this.state = {};\n      this.rootElement = document.getElementById(rootElementId);\n    }\n\n    setState(newState) {\n      this.state = { ...this.state, ...newState };\n      this.#updateDOM(); // State değiştiğinde DOM'u güncelle\n    }\n\n    #updateDOM() {\n      const newDOM = this.render(); // Yeni DOM'u render et\n      this.rootElement.replaceChildren(newDOM); // Sadece değişen kısımları güncelle\n    }\n\n    render() {\n      throw new Error(\"render() metodu implemente edilmeli!\");\n    }\n  }\n\n  // Örnek Bileşen: Counter (Sayı Artırma/Azaltma)\n  class Counter extends Component {\n    constructor(rootElementId) {\n      super({}, rootElementId);\n      this.state = { count: 0, text: \"Merhaba Dünya!\" };\n    }\n\n    // DOM Oluşturma\n    render() {\n      const container = document.createElement(\"div\");\n      \n      // Sayı Görüntüleme\n      const countElement = document.createElement(\"h1\");\n      countElement.textContent = `Sayı: ${this.state.count}`;\n\n      // Metin Girişi (Two-Way Data Binding)\n      const inputElement = document.createElement(\"input\");\n      inputElement.value = this.state.text;\n      inputElement.addEventListener(\"input\", (e) => {\n        this.setState({ text: e.target.value }); // Input değiştiğinde state'i güncelle\n      });\n\n      // Düğmeler\n      const buttonPlus = document.createElement(\"button\");\n      buttonPlus.textContent = \"+\";\n      buttonPlus.addEventListener(\"click\", () => {\n        this.setState({ count: this.state.count + 1 }); // State'i güncelle\n      });\n\n      const buttonMinus = document.createElement(\"button\");\n      buttonMinus.textContent = \"-\";\n      buttonMinus.addEventListener(\"click\", () => {\n        this.setState({ count: this.state.count - 1 });\n      });\n\n      // Birleştirme\n      container.append(\n        countElement,\n        inputElement,\n        document.createElement(\"br\"),\n        buttonPlus,\n        buttonMinus,\n        document.createElement(\"p\").textContent = `Metin: ${this.state.text}`\n      );\n\n      return container;\n    }\n  }\n\n  // Uygulamayı Başlat\n  const app = new Counter(\"app\");\n  app.#updateDOM(); // İlk render\n\u003C/script>\n```\n\n**2. Veri Bağlama:**\n\n  - React ve Vue'da veri bağlama oldukça yaygın bir tekniktir. Pure JavaScript ile, DOM manipülasyonu ve event listener'lar kullanılarak benzer bir etki oluşturulabilir.\n\n**Örnek Kod:**\n```js\n\u003Cinput type=\"text\" id=\"input\">\n\u003Cp id=\"output\">\u003C/p>\n\n\u003Cscript>\n  // Model (Veri Kaynağı)\n  const data = {\n    _message: \"Merhaba\",\n    get message() {\n      return this._message;\n    },\n    set message(value) {\n      this._message = value;\n      // Model değiştiğinde DOM'u güncelle\n      outputElement.textContent = value; \n      inputElement.value = value; \n    }\n  };\n\n  // DOM Elementleri\n  const inputElement = document.getElementById(\"input\");\n  const outputElement = document.getElementById(\"output\");\n\n  // 1. DOM -> Model Bağlama (Input değiştiğinde)\n  inputElement.addEventListener(\"input\", (e) => {\n    data.message = e.target.value; // Modeli güncelle\n  });\n\n  // 2. Model -> DOM Bağlama (İlk yükleme)\n  data.message = data.message; // Tetikleyici\n\u003C/script>\n```\n\n**3. Virtual DOM ve Reaktivite:**\n\n  - Virtual DOM'un temel avantajı, yalnızca değişen kısımların güncellenmesidir. Pure JavaScript ile, DOM değişikliklerini izleyerek benzer bir optimizasyon yapılabilir, ancak kütüphaneler bu süreci oldukça hızlı hale getirir.\n\n##### Bölüm 3: Kütüphanelerin Getirdiği Kolaylıklar ve Avantajlar\n\n- **Hızlı Prototipleme:** React ve Vue, hızlıca kullanıcı arayüzleri geliştirme imkanı sunar. Kütüphaneler, birçok temel işlevselliği hazır olarak sunduğu için, uygulama geliştirme süresi kısalır.\n\n- **Kod Bakımı ve Organizasyonu:** Bileşen tabanlı yaklaşım, özellikle büyük projelerde kodun daha düzenli ve yönetilebilir olmasını sağlar. Pure JavaScript ile bu yapı sağlanabilir, ancak kütüphaneler bu süreci daha sistematik hale getirir.\n\n- **Topluluk Desteği ve Ekosistem:** React ve Vue, büyük topluluklara ve çok sayıda hazır paketlere sahiptir. Bu, geliştiricilerin işini kolaylaştırır ve hızlı çözümler bulmalarına yardımcı olur.\n\n##### Bölüm 4: Sonuç ve Değerlendirme\nModern frontend geliştirme, büyük ölçüde bu kütüphaneler üzerine kuruludur. Ancak, aslında temelde bu kütüphanelerin sunduğu özellikler, pure HTML, CSS ve JavaScript ile yapılabilecek şeylerdir. Kütüphaneler, geliştiricilere kolaylık sağlasa da, temelleri anlamak, bu kütüphaneleri kullanmadan da etkili uygulamalar geliştirebilmek için önemlidir.","src/content/blog/2.md","918cef4698ca1a27",{"html":81,"metadata":82},"\u003Cp>Frontend geliştirme dünyasında, React, Vue, Angular gibi modern kütüphaneler büyük bir popülarite kazandı. Bu kütüphaneler, dinamik ve etkileşimli kullanıcı arayüzleri geliştirmeyi oldukça kolaylaştırıyor. Ancak, bu kütüphanelerin sunduğu avantajların çoğu, aslında modern JavaScript’in ve web tarayıcılarının sunduğu özelliklerle mümkündür. Bu makalede, bu popüler kütüphanelerin sunduğu özelliklerin aslında pure HTML, CSS ve JavaScript ile nasıl yapılabileceğini keşfedeceğiz.\u003C/p>\n\u003Ch5 id=\"bölüm-1-react-ve-vueun-temel-felsefesi\">Bölüm 1: React ve Vue’un Temel Felsefesi\u003C/h5>\n\u003Cul>\n\u003Cli>React ve Vue, temelde bileşen tabanlı yaklaşımlar sunar. Her bileşen, kendi içinde bağımsızdır ve yalnızca veriye bağlı olarak güncellenir.\u003C/li>\n\u003Cli>React, “virtual DOM” kullanarak DOM manipülasyonlarını optimize eder. Ancak, aynı şey JavaScript ve DOM API’leri kullanılarak manuel olarak da yapılabilir.\u003C/li>\n\u003Cli>Vue, reaktif veri bağlama sunarak DOM güncellemelerini otomatikleştirir. Bu tür bir reaktiviteyi manuel olarak JavaScript ile de sağlamak mümkündür.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Örnek Kod:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"list\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onclick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"updateListOptimized()\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Optimize Güncelle&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  let currentData = [1, 2, 3];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // OPTİMİZE: Sadece değişen elemanları günceller ✅\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  function updateListOptimized() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    const newData \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    const list \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">getElementById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"list\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    const currentItems \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Array.\u003C/span>\u003Cspan style=\"color:#B392F0\">from\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(list.children);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Her elemanı karşılaştır\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    newData.\u003C/span>\u003Cspan style=\"color:#B392F0\">forEach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">newItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">index\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (currentItems[index]) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Eleman zaten varsa ve değişmişse güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (currentItems[index].textContent \u003C/span>\u003Cspan style=\"color:#F97583\">!==\u003C/span>\u003Cspan style=\"color:#B392F0\"> String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(newItem)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          currentItems[index].textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> newItem; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Sadece metni değiştir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Yeni eleman ekle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> li\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"li\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        li.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> newItem;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        list.\u003C/span>\u003Cspan style=\"color:#B392F0\">appendChild\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(li);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Fazladan eleman varsa sil\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    while\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (currentItems.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#F97583\"> >\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> newData.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      list.removeChild(list.lastChild);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // İlk yükleme\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  updateListOptimized();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"bölüm-2-pure-html-css-ve-javascript-ile-react-ve-vue-özellikleri\">Bölüm 2: Pure HTML, CSS ve JavaScript ile React ve Vue Özellikleri\u003C/h5>\n\u003Cp>\u003Cstrong>1. Bileşen Yapısı:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Modern JavaScript ile, class yapıları kullanarak bileşenler oluşturabiliriz. render fonksiyonları ve veri bağlamaları, DOM manipülasyonlarıyla taklit edilebilir.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Örnek Kod:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"app\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // Temel Bileşen Sınıfı (React'ten ilham alınmıştır)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  class Component {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(props \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {}, rootElementId) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.props \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> props;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.rootElement \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">getElementById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(rootElementId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    setState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(newState) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state, \u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">newState };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.#\u003C/span>\u003Cspan style=\"color:#B392F0\">updateDOM\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// State değiştiğinde DOM'u güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    #\u003C/span>\u003Cspan style=\"color:#B392F0\">updateDOM\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const newDOM \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Yeni DOM'u render et\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.rootElement.replaceChildren(newDOM); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Sadece değişen kısımları güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      throw new \u003C/span>\u003Cspan style=\"color:#B392F0\">Error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"render() metodu implemente edilmeli!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // Örnek Bileşen: Counter (Sayı Artırma/Azaltma)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  class Counter extends Component {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(rootElementId) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      super\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({}, \u003C/span>\u003Cspan style=\"color:#FFAB70\">rootElementId\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { count: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, text: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Merhaba Dünya!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // DOM Oluşturma\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const container \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"div\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Sayı Görüntüleme\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const countElement \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"h1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      countElement.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `Sayı: ${\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">count\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Metin Girişi (Two-Way Data Binding)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const inputElement \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"input\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      inputElement.value \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state.text;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      inputElement.addEventListener(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"input\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (e) => {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">setState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ text: e.target.value }); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Input değiştiğinde state'i güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Düğmeler\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const buttonPlus \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"button\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      buttonPlus.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"+\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      buttonPlus.addEventListener(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"click\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () => {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">setState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ count: \u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state.count \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }); \u003C/span>\u003Cspan style=\"color:#6A737D\">// State'i güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      const buttonMinus \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"button\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      buttonMinus.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"-\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      buttonMinus.addEventListener(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"click\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () => {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">        this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">setState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ count: \u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state.count \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Birleştirme\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      container.append(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        countElement,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        inputElement,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        document.createElement(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"br\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        buttonPlus,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        buttonMinus,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        document.createElement(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"p\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).textContent = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">`Metin: ${\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">text\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      return container;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Uygulamayı Başlat\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  const app = new Counter(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"app\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  app.#updateDOM(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// İlk render\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/script>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>2. Veri Bağlama:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>React ve Vue’da veri bağlama oldukça yaygın bir tekniktir. Pure JavaScript ile, DOM manipülasyonu ve event listener’lar kullanılarak benzer bir etki oluşturulabilir.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Örnek Kod:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">input\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"text\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"input\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"output\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // Model (Veri Kaynağı)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  const data = {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    _message: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Merhaba\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    get \u003C/span>\u003Cspan style=\"color:#B392F0\">message\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      return this._message;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    set \u003C/span>\u003Cspan style=\"color:#B392F0\">message\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      this._message \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Model değiştiğinde DOM'u güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      outputElement.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value; \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      inputElement.value \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> value; \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // DOM Elementleri\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  const inputElement = document.getElementById(\"input\");\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  const outputElement = document.getElementById(\"output\");\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // 1. DOM -> Model Bağlama (Input değiştiğinde)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  inputElement.addEventListener(\"input\", (e) => {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    data.message \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> e.target.value; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Modeli güncelle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  // 2. Model -> DOM Bağlama (İlk yükleme)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  data.message = data.message; // Tetikleyici\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>3. Virtual DOM ve Reaktivite:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Virtual DOM’un temel avantajı, yalnızca değişen kısımların güncellenmesidir. Pure JavaScript ile, DOM değişikliklerini izleyerek benzer bir optimizasyon yapılabilir, ancak kütüphaneler bu süreci oldukça hızlı hale getirir.\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"bölüm-3-kütüphanelerin-getirdiği-kolaylıklar-ve-avantajlar\">Bölüm 3: Kütüphanelerin Getirdiği Kolaylıklar ve Avantajlar\u003C/h5>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Hızlı Prototipleme:\u003C/strong> React ve Vue, hızlıca kullanıcı arayüzleri geliştirme imkanı sunar. Kütüphaneler, birçok temel işlevselliği hazır olarak sunduğu için, uygulama geliştirme süresi kısalır.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Kod Bakımı ve Organizasyonu:\u003C/strong> Bileşen tabanlı yaklaşım, özellikle büyük projelerde kodun daha düzenli ve yönetilebilir olmasını sağlar. Pure JavaScript ile bu yapı sağlanabilir, ancak kütüphaneler bu süreci daha sistematik hale getirir.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Topluluk Desteği ve Ekosistem:\u003C/strong> React ve Vue, büyük topluluklara ve çok sayıda hazır paketlere sahiptir. Bu, geliştiricilerin işini kolaylaştırır ve hızlı çözümler bulmalarına yardımcı olur.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"bölüm-4-sonuç-ve-değerlendirme\">Bölüm 4: Sonuç ve Değerlendirme\u003C/h5>\n\u003Cp>Modern frontend geliştirme, büyük ölçüde bu kütüphaneler üzerine kuruludur. Ancak, aslında temelde bu kütüphanelerin sunduğu özellikler, pure HTML, CSS ve JavaScript ile yapılabilecek şeylerdir. Kütüphaneler, geliştiricilere kolaylık sağlasa da, temelleri anlamak, bu kütüphaneleri kullanmadan da etkili uygulamalar geliştirebilmek için önemlidir.\u003C/p>",{"headings":83,"localImagePaths":96,"remoteImagePaths":97,"frontmatter":98,"imagePaths":100},[84,87,90,93],{"depth":26,"slug":85,"text":86},"bölüm-1-react-ve-vueun-temel-felsefesi","Bölüm 1: React ve Vue’un Temel Felsefesi",{"depth":26,"slug":88,"text":89},"bölüm-2-pure-html-css-ve-javascript-ile-react-ve-vue-özellikleri","Bölüm 2: Pure HTML, CSS ve JavaScript ile React ve Vue Özellikleri",{"depth":26,"slug":91,"text":92},"bölüm-3-kütüphanelerin-getirdiği-kolaylıklar-ve-avantajlar","Bölüm 3: Kütüphanelerin Getirdiği Kolaylıklar ve Avantajlar",{"depth":26,"slug":94,"text":95},"bölüm-4-sonuç-ve-değerlendirme","Bölüm 4: Sonuç ve Değerlendirme",[],[],{"title":73,"description":74,"pubDate":99,"heroImage":76},"May 03 2025",[],"3",{"id":101,"data":103,"body":108,"filePath":109,"digest":110,"rendered":111},{"title":104,"description":105,"pubDate":106,"heroImage":107},"TanStack Nedir, Ne İşe Yarar ve Neden Kullanmalıyız?","Tanstack",["Date","2025-05-09T21:00:00.000Z"],"/tanstack.png","Modern frontend geliştirme süreçlerinde, veri ile çalışmak kaçınılmazdır. Kullanıcı tablolarla veri görmek, filtrelemek, sıralamak ve sayfalamak ister. Ancak bu özellikleri sıfırdan geliştirmek zaman alır ve sürdürülebilir olmaz. İşte bu noktada TanStack devreye giriyor.\n\n##### TanStack Nedir?\n\n[TanStack](https://tanstack.com/query/latest/docs/framework/react/overview) , farklı web teknolojileri için hazırlanmış, veri yönetimini kolaylaştıran açık kaynak kütüphaneler topluluğudur. En bilinenleri şunlardır:\n\n\n  - TanStack Table – Önceden React Table olarak bilinen, framework bağımsız (React, Vue, Solid, Svelte) tablo çözümü.\n\n  - TanStack Query – Sunucudan veri çekme, cache’leme ve senkronizasyon yönetimi (önceden React Query).\n\n  - TanStack Virtual – Büyük listelerin ve tabloların performanslı şekilde gösterilmesini sağlar (sanal kaydırma).\n\n  - TanStack Router – Uygulamalar için güçlü ve esnek bir router çözümü (özellikle React ile güçlü entegrasyon).\n\n##### Ne İşe Yarar?\nÖzellikle büyük projelerde, veri ile çalışan bileşenleri oluştururken sıklıkla şu sorunlarla karşılaşırız:\n\n  - Tablolarda sayfalama, sıralama, filtreleme\n\n  - API'den veri çekme ve güncel tutma\n\n  - Scroll performans problemleri\n\n  - Karmaşık route yapılarının yönetimi\n\nTanStack kütüphaneleri bu problemleri çözmek için minimal, esnek ve performans odaklı araçlar sunar.\n\n##### Neden TanStack Kullanmalıyız?\n1. **Performans**\n\nTanStack Virtual gibi çözümlerle, binlerce veriyi sanal olarak göstererek DOM yorgunluğunu azaltır. Kullanıcıya hızlı ve akıcı bir deneyim sunar.\n\n2. **Modüler Yapı**\n\nHer bir kütüphane tek bir amaca hizmet eder. İstediğini alır, istemediğini kullanmazsın. Bu da projeni şişirmeden özelleştirmeni sağlar.\n\n3. **Framework Bağımsızlık**\n\nTanStack Table gibi kütüphaneler React ile başladı ama artık Vue, Solid ve Svelte ile de çalışabiliyor.\n\n4. **Server-State Yönetimi (TanStack Query)**\n\nReact Query sayesinde, veri çekme işlemleri tekrar tekrar yazılmak zorunda kalmaz. Otomatik cache, refetching, polling gibi özellikler projeye entegre olur.\n\n5. **Dokümantasyon ve Topluluk**\n\nTanStack'in çok iyi belgelenmiş bir yapısı ve geniş bir topluluğu vardır. Sık yaşanan sorunlara kolayca çözüm bulmak mümkündür.\nNerelerde Kullanılır?\n\n  - Admin panelleri ve dashboard uygulamaları\n\n  - CRM ve ERP sistemleri\n\n  - E-ticaret filtreleme sistemleri\n\n  - API ile çalışan tablolar\n\n  - SSR veya CSR projeler\n\n\n##### TanStack Query Kullanımı\n1. **Gerekli paketleri kur**\n\n```bash\nnpm install @tanstack/react-query\n```\n\n2. **App.jsx dosyasında QueryClient kurulumunu yap**\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  \u003CReact.StrictMode>\n    \u003CQueryClientProvider client={queryClient}>\n      \u003CApp />\n    \u003C/QueryClientProvider>\n  \u003C/React.StrictMode>\n);\n```\n\n3. **App.jsx içinde veri çekme işlemi**\n```js\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\n\nconst fetchPosts = async () => {\n  const { data } = await axios.get('https://jsonplaceholder.typicode.com/posts');\n  return data;\n};\n\nfunction App() {\n  const { data, isLoading, isError, error } = useQuery({\n    queryKey: ['posts'],\n    queryFn: fetchPosts,\n  });\n\n  if (isLoading) return \u003Cp>Yükleniyor...\u003C/p>;\n  if (isError) return \u003Cp>Hata: {error.message}\u003C/p>;\n\n  return (\n    \u003Cdiv>\n      \u003Ch1>Postlar\u003C/h1>\n      \u003Cul>\n        {data.map((post) => (\n          \u003Cli key={post.id}>\n            \u003Cstrong>{post.title}\u003C/strong>\n            \u003Cp>{post.body}\u003C/p>\n          \u003C/li>\n        ))}\n      \u003C/ul>\n    \u003C/div>\n  );\n}\n\nexport default App;\n```\n\n##### Açıklamalar:\n  - **useQuery:** API'den veri çekmek için kullanılır.\n  - **queryKey:** Cache anahtarıdır. Aynı key ile yapılan sorgular tekrar API'ye gitmeden cache’ten gelir.\n  - **queryFn:** Asenkron veri getiren fonksiyondur (örneğin axios ile API çağrısı).\n  - **isLoading**, **isError**, **data**, **error:** Sorgu durumları için kullanılabilecek otomatik flag’lerdir.","src/content/blog/3.md","29027681ec11783d",{"html":112,"metadata":113},"\u003Cp>Modern frontend geliştirme süreçlerinde, veri ile çalışmak kaçınılmazdır. Kullanıcı tablolarla veri görmek, filtrelemek, sıralamak ve sayfalamak ister. Ancak bu özellikleri sıfırdan geliştirmek zaman alır ve sürdürülebilir olmaz. İşte bu noktada TanStack devreye giriyor.\u003C/p>\n\u003Ch5 id=\"tanstack-nedir\">TanStack Nedir?\u003C/h5>\n\u003Cp>\u003Ca href=\"https://tanstack.com/query/latest/docs/framework/react/overview\">TanStack\u003C/a> , farklı web teknolojileri için hazırlanmış, veri yönetimini kolaylaştıran açık kaynak kütüphaneler topluluğudur. En bilinenleri şunlardır:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>TanStack Table – Önceden React Table olarak bilinen, framework bağımsız (React, Vue, Solid, Svelte) tablo çözümü.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>TanStack Query – Sunucudan veri çekme, cache’leme ve senkronizasyon yönetimi (önceden React Query).\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>TanStack Virtual – Büyük listelerin ve tabloların performanslı şekilde gösterilmesini sağlar (sanal kaydırma).\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>TanStack Router – Uygulamalar için güçlü ve esnek bir router çözümü (özellikle React ile güçlü entegrasyon).\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"ne-i̇şe-yarar\">Ne İşe Yarar?\u003C/h5>\n\u003Cp>Özellikle büyük projelerde, veri ile çalışan bileşenleri oluştururken sıklıkla şu sorunlarla karşılaşırız:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Tablolarda sayfalama, sıralama, filtreleme\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>API’den veri çekme ve güncel tutma\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Scroll performans problemleri\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Karmaşık route yapılarının yönetimi\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>TanStack kütüphaneleri bu problemleri çözmek için minimal, esnek ve performans odaklı araçlar sunar.\u003C/p>\n\u003Ch5 id=\"neden-tanstack-kullanmalıyız\">Neden TanStack Kullanmalıyız?\u003C/h5>\n\u003Col>\n\u003Cli>\u003Cstrong>Performans\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cp>TanStack Virtual gibi çözümlerle, binlerce veriyi sanal olarak göstererek DOM yorgunluğunu azaltır. Kullanıcıya hızlı ve akıcı bir deneyim sunar.\u003C/p>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>Modüler Yapı\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cp>Her bir kütüphane tek bir amaca hizmet eder. İstediğini alır, istemediğini kullanmazsın. Bu da projeni şişirmeden özelleştirmeni sağlar.\u003C/p>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>Framework Bağımsızlık\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cp>TanStack Table gibi kütüphaneler React ile başladı ama artık Vue, Solid ve Svelte ile de çalışabiliyor.\u003C/p>\n\u003Col start=\"4\">\n\u003Cli>\u003Cstrong>Server-State Yönetimi (TanStack Query)\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cp>React Query sayesinde, veri çekme işlemleri tekrar tekrar yazılmak zorunda kalmaz. Otomatik cache, refetching, polling gibi özellikler projeye entegre olur.\u003C/p>\n\u003Col start=\"5\">\n\u003Cli>\u003Cstrong>Dokümantasyon ve Topluluk\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cp>TanStack’in çok iyi belgelenmiş bir yapısı ve geniş bir topluluğu vardır. Sık yaşanan sorunlara kolayca çözüm bulmak mümkündür.\nNerelerde Kullanılır?\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Admin panelleri ve dashboard uygulamaları\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>CRM ve ERP sistemleri\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>E-ticaret filtreleme sistemleri\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>API ile çalışan tablolar\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>SSR veya CSR projeler\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"tanstack-query-kullanımı\">TanStack Query Kullanımı\u003C/h5>\n\u003Col>\n\u003Cli>\u003Cstrong>Gerekli paketleri kur\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> @tanstack/react-query\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>App.jsx dosyasında QueryClient kurulumunu yap\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> React \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ReactDOM \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react-dom/client'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { QueryClient, QueryClientProvider } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@tanstack/react-query'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> App \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './App'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> queryClient\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> QueryClient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">ReactDOM.\u003C/span>\u003Cspan style=\"color:#B392F0\">createRoot\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(document.\u003C/span>\u003Cspan style=\"color:#B392F0\">getElementById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'root'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)).\u003C/span>\u003Cspan style=\"color:#B392F0\">render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">React.StrictMode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">QueryClientProvider\u003C/span>\u003Cspan style=\"color:#B392F0\"> client\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{queryClient}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">App\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">QueryClientProvider\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">React.StrictMode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>App.jsx içinde veri çekme işlemi\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { useQuery } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@tanstack/react-query'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> axios \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'axios'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetchPosts\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> axios.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'https://jsonplaceholder.typicode.com/posts'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">isLoading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">isError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">error\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    queryKey: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'posts'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    queryFn: fetchPosts,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (isLoading) \u003C/span>\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Yükleniyor...&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (isError) \u003C/span>\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Hata: {error.message}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Postlar&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {data.\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">post\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#B392F0\"> key\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{post.id}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">strong\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{post.title}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">strong\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{post.body}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        ))}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> App;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"açıklamalar\">Açıklamalar:\u003C/h5>\n\u003Cul>\n\u003Cli>\u003Cstrong>useQuery:\u003C/strong> API’den veri çekmek için kullanılır.\u003C/li>\n\u003Cli>\u003Cstrong>queryKey:\u003C/strong> Cache anahtarıdır. Aynı key ile yapılan sorgular tekrar API’ye gitmeden cache’ten gelir.\u003C/li>\n\u003Cli>\u003Cstrong>queryFn:\u003C/strong> Asenkron veri getiren fonksiyondur (örneğin axios ile API çağrısı).\u003C/li>\n\u003Cli>\u003Cstrong>isLoading\u003C/strong>, \u003Cstrong>isError\u003C/strong>, \u003Cstrong>data\u003C/strong>, \u003Cstrong>error:\u003C/strong> Sorgu durumları için kullanılabilecek otomatik flag’lerdir.\u003C/li>\n\u003C/ul>",{"headings":114,"localImagePaths":130,"remoteImagePaths":131,"frontmatter":132,"imagePaths":134},[115,118,121,124,127],{"depth":26,"slug":116,"text":117},"tanstack-nedir","TanStack Nedir?",{"depth":26,"slug":119,"text":120},"ne-i̇şe-yarar","Ne İşe Yarar?",{"depth":26,"slug":122,"text":123},"neden-tanstack-kullanmalıyız","Neden TanStack Kullanmalıyız?",{"depth":26,"slug":125,"text":126},"tanstack-query-kullanımı","TanStack Query Kullanımı",{"depth":26,"slug":128,"text":129},"açıklamalar","Açıklamalar:",[],[],{"title":104,"description":105,"pubDate":133,"heroImage":107},"May 10 2025",[],"4",{"id":135,"data":137,"body":142,"filePath":143,"digest":144,"rendered":145},{"title":138,"description":139,"pubDate":140,"heroImage":141},"Hazır UI Kütüphanelerinden Vazgeçip Saf HTML/CSS’e Dönmek","HTML/CSS",["Date","2025-06-04T21:00:00.000Z"],"/pure_css.png","## Giriş\n\nModern frontend geliştirmede hız ve tutarlılık sağlamak amacıyla Tailwind CSS ve shadcn/ui gibi hazır kütüphaneler sıkça tercih ediliyor. Bu yazıda, yakın zamanda üzerinde çalıştığım bir projede yaşadığım UI bileşeni hatasını (örneğin user menu bileşeninin bir anda çalışmamaya başlaması) ele alacağım. Ardından, neden saf HTML ve CSS ile kendi UI’ınızı geliştirmenin hâlâ güçlü bir seçenek olduğuna dair çıkarımlarımı paylaşacağım.\n\n## Proje ve Kullanılan Teknolojiler\n\n* **Tailwind CSS:** Utility-first yaklaşımıyla stil vermeyi kolaylaştırıyor.\n* **shadcn/ui:** Tailwind üzerine inşa edilmiş, önceden tasarlanmış React bileşen kütüphanesi.\n\nBu kombinasyon, başlangıçta hızlı prototipleme ve tutarlılık vaadi sunuyor olsa da, bazı durumlarda beklenmedik davranışlar ve bağımlılık sorunlarıyla karşılaşabiliyor.\n\n## Yaşadığım Sorun\n\n1. **User Menu Bileşeni:** Profil fotoğrafına tıklandığında açılması gereken dropdown menüsü, aniden tepki vermemeye başladı.\n2. **Debug Süreci:**\n   * Versiyon kontrolünde geri alıp farklı Tailwind ve shadcn versiyonlarını denedim.\n   * Bileşen kodunu sadeleştirip minimal bir test ortamında çalıştırdım.\n   * Chrome DevTools’tan event listener ve CSS çakışmalarını inceledim.\n3. **className Karmaşası:** Tailwind'in utility-first yaklaşımı nedeniyle HTML elementlerinin className'leri çok uzun ve karmaşık hale geldi. Hangi stilin nereden geldiğini takip etmek zorlaştı.\n  * Tailwind örneği: \n  ```html\n  \u003Cdiv class=\"flex items-center justify-between px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-md hover:bg-gray-100 transition duration-300 ease-in-out text-sm text-gray-800 font-medium\">\n  Card\n  \u003C/div>\n```\n  * Css Örneği:\n  ```css\n.card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n  background-color: white;\n  border: 1px solid #d1d5db;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #1f2937;\n  transition: background-color 0.3s ease-in-out;\n}\n.card:hover {\n  background-color: #f3f4f6;\n}\n```\n* Şimdi div elementimi bu şekilde kullanabilirim. \n```html\n\u003Cdiv class='card'>Card\u003C/div>\n```\n\n4. **Sonuç:** Her denemede farklı bir hata veya sıfır tepki; sonuçta bileşeni eski haline döndürmek için çok fazla zaman harcadım.\n\n## Çözüm Arayışları\n\n* **Kütüphane Güncellemeleri:** Sürüm uyumsuzluklarını gidermek adına Tailwind ve shadcn’u güncelledim.\n* **Kod Sorgulaması:** Tipografi, spacing, z-index ve event handler konfigürasyonlarını yeniden ele aldım.\n* **Topluluk Kaynakları:** GitHub Issues ve Discord kanallarında benzer problem yaşayanların çözümlerini aradım.\n\nAncak nihayetinde, bu süreç projenin hızını ve verimliliğini olumsuz etkiledi.\n\n## Saf HTML ve CSS ile Kendi UI’ınızı Oluşturmak\n\n### Avantajlar\n\n* **Bağımlılıktan Kurtulma:** Ekstra paket yüklemeye gerek kalmadan sade ve anlaşılır yapı.\n* **Kontrol:** Her detayın sizde olması, beklenmedik çakışmaların önüne geçer.\n* **Performans:** Gereksiz CSS yükü ortadan kalkar.\n\n### Örnek: Basit Dropdown Menü\n\n```html\n\u003Cdiv class=\"dropdown\">\n  \u003Cbutton id=\"menuToggle\">Profil\u003C/button>\n  \u003Cul id=\"menuList\" class=\"hidden\">\n    \u003Cli>\u003Ca href=\"/profile\">Profilim\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"/settings\">Ayarlar\u003C/a>\u003C/li>\n    \u003Cli>\u003Ca href=\"/logout\">Çıkış\u003C/a>\u003C/li>\n  \u003C/ul>\n\u003C/div>\n```\n\n```css\n.dropdown { position: relative; display: inline-block; }\n#menuList {\n  position: absolute; top: 100%; left: 0;\n  list-style: none; margin: 0; padding: 0;\n  border: 1px solid #ccc; background: #fff;\n}\n.hidden { display: none; }\n```\n\n```js\nconst toggle = document.getElementById('menuToggle');\nconst list = document.getElementById('menuList');\ntoggle.addEventListener('click', () => {\n  list.classList.toggle('hidden');\n});\n```\n\nBu yaklaşım, öğrenmesi ve sürdürmesi son derece basit, ayrıca tamamen projenize özgü tasarımlar yapmanızı sağlıyor.\n\n## Sonuç ve Öneriler\n\n* Hazır kütüphaneler hız kazandırsa da, karmaşık bağımlılıklar bazen maliyeti artırabilir.\n* Küçük veya orta ölçekli projelerde, saf HTML/CSS/JavaScript ile bileşenlerinizi inşa etmek daha sürdürülebilir ve özelleştirilebilir olabilir.\n* UI ihtiyaçlarınız yoğun değilse, gereksiz yükten kaçınmak için kendi basit çözümlerinize yönelebilirsiniz.\n\nKütüphane kullanım kararınızı verirken, projenizin kapsamı ve uzun vadeli bakım maliyetini göz önünde bulundurun.","src/content/blog/4.md","8e8c5dbe5e658058",{"html":146,"metadata":147},"\u003Ch2 id=\"giriş\">Giriş\u003C/h2>\n\u003Cp>Modern frontend geliştirmede hız ve tutarlılık sağlamak amacıyla Tailwind CSS ve shadcn/ui gibi hazır kütüphaneler sıkça tercih ediliyor. Bu yazıda, yakın zamanda üzerinde çalıştığım bir projede yaşadığım UI bileşeni hatasını (örneğin user menu bileşeninin bir anda çalışmamaya başlaması) ele alacağım. Ardından, neden saf HTML ve CSS ile kendi UI’ınızı geliştirmenin hâlâ güçlü bir seçenek olduğuna dair çıkarımlarımı paylaşacağım.\u003C/p>\n\u003Ch2 id=\"proje-ve-kullanılan-teknolojiler\">Proje ve Kullanılan Teknolojiler\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Tailwind CSS:\u003C/strong> Utility-first yaklaşımıyla stil vermeyi kolaylaştırıyor.\u003C/li>\n\u003Cli>\u003Cstrong>shadcn/ui:\u003C/strong> Tailwind üzerine inşa edilmiş, önceden tasarlanmış React bileşen kütüphanesi.\u003C/li>\n\u003C/ul>\n\u003Cp>Bu kombinasyon, başlangıçta hızlı prototipleme ve tutarlılık vaadi sunuyor olsa da, bazı durumlarda beklenmedik davranışlar ve bağımlılık sorunlarıyla karşılaşabiliyor.\u003C/p>\n\u003Ch2 id=\"yaşadığım-sorun\">Yaşadığım Sorun\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>User Menu Bileşeni:\u003C/strong> Profil fotoğrafına tıklandığında açılması gereken dropdown menüsü, aniden tepki vermemeye başladı.\u003C/li>\n\u003Cli>\u003Cstrong>Debug Süreci:\u003C/strong>\n\u003Cul>\n\u003Cli>Versiyon kontrolünde geri alıp farklı Tailwind ve shadcn versiyonlarını denedim.\u003C/li>\n\u003Cli>Bileşen kodunu sadeleştirip minimal bir test ortamında çalıştırdım.\u003C/li>\n\u003Cli>Chrome DevTools’tan event listener ve CSS çakışmalarını inceledim.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>className Karmaşası:\u003C/strong> Tailwind’in utility-first yaklaşımı nedeniyle HTML elementlerinin className’leri çok uzun ve karmaşık hale geldi. Hangi stilin nereden geldiğini takip etmek zorlaştı.\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>Tailwind örneği:\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"flex items-center justify-between px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-md hover:bg-gray-100 transition duration-300 ease-in-out text-sm text-gray-800 font-medium\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Card\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>Css Örneği:\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.card\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">display\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">flex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">align-items\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">center\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">justify-content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">space-between\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.5\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">background-color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">white\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">border\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> solid\u003C/span>\u003Cspan style=\"color:#79B8FF\"> #d1d5db\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.5\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">font-size\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.875\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">font-weight\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">500\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">#1f2937\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">transition\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: background-color \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.3\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> ease-in-out\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.card:hover\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">background-color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">#f3f4f6\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>Şimdi div elementimi bu şekilde kullanabilirim.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'card'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Card&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"4\">\n\u003Cli>\u003Cstrong>Sonuç:\u003C/strong> Her denemede farklı bir hata veya sıfır tepki; sonuçta bileşeni eski haline döndürmek için çok fazla zaman harcadım.\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"çözüm-arayışları\">Çözüm Arayışları\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Kütüphane Güncellemeleri:\u003C/strong> Sürüm uyumsuzluklarını gidermek adına Tailwind ve shadcn’u güncelledim.\u003C/li>\n\u003Cli>\u003Cstrong>Kod Sorgulaması:\u003C/strong> Tipografi, spacing, z-index ve event handler konfigürasyonlarını yeniden ele aldım.\u003C/li>\n\u003Cli>\u003Cstrong>Topluluk Kaynakları:\u003C/strong> GitHub Issues ve Discord kanallarında benzer problem yaşayanların çözümlerini aradım.\u003C/li>\n\u003C/ul>\n\u003Cp>Ancak nihayetinde, bu süreç projenin hızını ve verimliliğini olumsuz etkiledi.\u003C/p>\n\u003Ch2 id=\"saf-html-ve-css-ile-kendi-uiınızı-oluşturmak\">Saf HTML ve CSS ile Kendi UI’ınızı Oluşturmak\u003C/h2>\n\u003Ch3 id=\"avantajlar\">Avantajlar\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Bağımlılıktan Kurtulma:\u003C/strong> Ekstra paket yüklemeye gerek kalmadan sade ve anlaşılır yapı.\u003C/li>\n\u003Cli>\u003Cstrong>Kontrol:\u003C/strong> Her detayın sizde olması, beklenmedik çakışmaların önüne geçer.\u003C/li>\n\u003Cli>\u003Cstrong>Performans:\u003C/strong> Gereksiz CSS yükü ortadan kalkar.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"örnek-basit-dropdown-menü\">Örnek: Basit Dropdown Menü\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"dropdown\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"menuToggle\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Profil&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#B392F0\"> id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"menuList\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/profile\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Profilim&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/settings\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Ayarlar&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/logout\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Çıkış&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.dropdown\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">relative\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">display\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">inline-block\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">#menuList\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">absolute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">top\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">left\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  list-style\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">none\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">margin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  border\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> solid\u003C/span>\u003Cspan style=\"color:#79B8FF\"> #ccc\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#79B8FF\">background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">#fff\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.hidden\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">display\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">none\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> toggle\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">getElementById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'menuToggle'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> list\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">getElementById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'menuList'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">toggle.\u003C/span>\u003Cspan style=\"color:#B392F0\">addEventListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'click'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  list.classList.\u003C/span>\u003Cspan style=\"color:#B392F0\">toggle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'hidden'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Bu yaklaşım, öğrenmesi ve sürdürmesi son derece basit, ayrıca tamamen projenize özgü tasarımlar yapmanızı sağlıyor.\u003C/p>\n\u003Ch2 id=\"sonuç-ve-öneriler\">Sonuç ve Öneriler\u003C/h2>\n\u003Cul>\n\u003Cli>Hazır kütüphaneler hız kazandırsa da, karmaşık bağımlılıklar bazen maliyeti artırabilir.\u003C/li>\n\u003Cli>Küçük veya orta ölçekli projelerde, saf HTML/CSS/JavaScript ile bileşenlerinizi inşa etmek daha sürdürülebilir ve özelleştirilebilir olabilir.\u003C/li>\n\u003Cli>UI ihtiyaçlarınız yoğun değilse, gereksiz yükten kaçınmak için kendi basit çözümlerinize yönelebilirsiniz.\u003C/li>\n\u003C/ul>\n\u003Cp>Kütüphane kullanım kararınızı verirken, projenizin kapsamı ve uzun vadeli bakım maliyetini göz önünde bulundurun.\u003C/p>",{"headings":148,"localImagePaths":175,"remoteImagePaths":176,"frontmatter":177,"imagePaths":179},[149,153,156,159,162,165,169,172],{"depth":150,"slug":151,"text":152},2,"giriş","Giriş",{"depth":150,"slug":154,"text":155},"proje-ve-kullanılan-teknolojiler","Proje ve Kullanılan Teknolojiler",{"depth":150,"slug":157,"text":158},"yaşadığım-sorun","Yaşadığım Sorun",{"depth":150,"slug":160,"text":161},"çözüm-arayışları","Çözüm Arayışları",{"depth":150,"slug":163,"text":164},"saf-html-ve-css-ile-kendi-uiınızı-oluşturmak","Saf HTML ve CSS ile Kendi UI’ınızı Oluşturmak",{"depth":166,"slug":167,"text":168},3,"avantajlar","Avantajlar",{"depth":166,"slug":170,"text":171},"örnek-basit-dropdown-menü","Örnek: Basit Dropdown Menü",{"depth":150,"slug":173,"text":174},"sonuç-ve-öneriler","Sonuç ve Öneriler",[],[],{"title":138,"description":139,"pubDate":178,"heroImage":141},"Jun 5 2025",[],"5",{"id":180,"data":182,"body":187,"filePath":188,"digest":189,"rendered":190},{"title":183,"description":184,"pubDate":185,"heroImage":186},"Progressive JSON Nedir?","Progressive JSON Express & React",["Date","2025-06-17T21:00:00.000Z"],"/progressive_json.webp","### 🚀 Progressive JSON Nedir? Express.js ve React ile Gerçek Zamanlı Uygulama  \n\n##### (Bonus: El Yazısı Efektiyle Daha Etkileyici UI)\n\nModern web uygulamalarında kullanıcı deneyimi, sadece verinin doğru olmasıyla değil, aynı zamanda **ne kadar hızlı** ve **akıcı** geldiğiyle de ilgilidir. Kullanıcılar boş ekranlar yerine \"bir şeyler oluyor\" hissini sever.\n\nİşte bu noktada **Progressive JSON** devreye giriyor.\n\n---\n\n#### 🎯 Progressive JSON Nedir?\n\n**Progressive JSON**, büyük JSON verilerini kullanıcıya **parça parça (stream olarak)** iletme yöntemidir. Bu, özellikle yavaş ağlarda ya da büyük veri setlerinde kullanıcıya beklemek yerine “veri gelmeye başladı” hissi verir.\n\nBu teknik genellikle `application/x-ndjson` yani **Newline Delimited JSON** ile kullanılır. Her satırda bir JSON nesnesi yer alır ve bu satırlar bir akış (stream) halinde gönderilir.\n\n---\n\n#### ✅ Neden Kullanmalıyız?\n\n- 🔄 **Daha hızlı render:** Tüm veriyi beklemeden ekrana yazdırmaya başlarız.  \n- 📡 **Gerçek zamanlı his:** Kullanıcı, sistemin çalıştığını hisseder.  \n- 🧱 **Modüler veri işleme:** Gelen her parçayı ayrı ayrı işleyebiliriz.  \n- 🧩 **Büyük veri desteği:** Dev JSON dosyaları yerine parça parça iletim sağlar.\n\n---\n\n#### ⚙️ Express.js ve React ile Progressive JSON Örneği\n\nŞimdi birlikte küçük ama öğretici bir örnek yapalım:\n\n- **Backend:** Express.js ile progressive (stream) JSON verisi sunacağız.  \n- **Frontend:** React ile bu veriyi canlı canlı alıp **el yazısı animasyonu** ile ekrana yazdıracağız.\n\n---\n\n#### 🔧 1. Express.js ile Progressive JSON Stream\n\n`server.ts`\n\n```tsx\nimport express from 'express';\nimport cors from 'cors';\n\nconst app = express();\napp.use(cors());\n\napp.get('/stream', (req, res) => {\n  res.setHeader('Content-Type', 'application/x-ndjson'); // NDJSON format\n\n  const users = [\n    { id: 1, name: 'Ali' },\n    { id: 2, name: 'Ayşe' },\n    { id: 3, name: 'Mehmet' },\n    { id: 4, name: 'Zeynep' },\n  ];\n\n  let i = 0;\n\n  const interval = setInterval(() => {\n    if (i >= users.length) {\n      clearInterval(interval);\n      res.end(); // Yayını kapat\n    } else {\n      res.write(JSON.stringify(users[i]) + '\\n'); // NDJSON: her satır ayrı bir JSON\n      i++;\n    }\n  }, 1000); // 1 saniyede bir kullanıcı gönder\n});\n\napp.listen(3001, () => {\n  console.log('Server is running on http://localhost:3001');\n});\n```\n\n#### 💻 2. React ile Progressive Okuma ve El Yazısı Gibi Gösterme\n\nVeriyi aldıktan sonra sadece listelemekle kalmayacağız. Her satırı sanki birisi yazıyormuş gibi harf harf ekrana yazdıracağız. Cursor kullanmadan, sade ama etkileyici bir animasyonla.\n\n##### 🧠 App.tsx — Progressive JSON ve Yazı Efektini Birleştirme\n\n##### Yazı Efekti\n\n```css\n.typewriter {\n  overflow: hidden;\n  white-space: nowrap;\n  animation: typing 2s steps(30, end);\n}\n\n@keyframes typing {\n  from {\n    width: 0\n  }\n\n  to {\n    width: 100%\n  }\n}\n```\n\n```tsx\nimport { useEffect, useState } from 'react';\n\ntype User = {\n  id: number;\n  name: string;\n};\n\nfunction App() {\n  const [users, setUsers] = useState\u003CUser[]>([]);\n\n  useEffect(() => {\n    const fetchStream = async () => {\n      const response = await fetch('http://localhost:3001/stream');\n      const reader = response.body?.getReader();\n      const decoder = new TextDecoder();\n\n      let buffer = '';\n\n      while (reader) {\n        const { value, done } = await reader.read();\n        if (done) break;\n\n        buffer += decoder.decode(value, { stream: true });\n\n        const lines = buffer.split('\\n');\n        buffer = lines.pop() || ''; // Son incomplete satırı sakla\n\n        for (const line of lines) {\n          if (line.trim()) {\n            const json = JSON.parse(line);\n            setUsers(prev => [...prev, json]);\n          }\n        }\n      }\n    };\n\n    fetchStream();\n  }, []);\n\n  return (\n    \u003Cdiv>\n      \u003Ch1>Kullanıcılar (Stream ile geliyor)\u003C/h1>\n      \u003Cul>\n        {users.map(user => (\n          \u003Cli key={user.id} className=\"typewriter\">\n            {user.id} - {user.name}\n          \u003C/li>\n        ))}\n      \u003C/ul>\n    \u003C/div>\n  );\n}\n\nexport default App;\n```\n\n#### ✍️ Sonuç\n\nProgressive JSON, kullanıcı deneyimini ciddi anlamda iyileştiren güçlü bir tekniktir.\nBunu bir de sade ama estetik bir \"el yazısı\" animasyonu ile birleştirdiğimizde, çok daha canlı ve etkileyici arayüzler ortaya çıkıyor.\nEğer büyük veri setleriyle çalışıyorsan, kullanıcıya veri aktığını hissettirmek istiyorsan ve aynı zamanda sade bir UI ile fark yaratmak istiyorsan:\n\n🎯 Progressive JSON + Yazı Efekti ikilisi seni çok ileri taşıyacaktır.","src/content/blog/5.md","20e1ca33f12b8167",{"html":191,"metadata":192},"\u003Ch3 id=\"-progressive-json-nedir-expressjs-ve-react-ile-gerçek-zamanlı-uygulama\">🚀 Progressive JSON Nedir? Express.js ve React ile Gerçek Zamanlı Uygulama\u003C/h3>\n\u003Ch5 id=\"bonus-el-yazısı-efektiyle-daha-etkileyici-ui\">(Bonus: El Yazısı Efektiyle Daha Etkileyici UI)\u003C/h5>\n\u003Cp>Modern web uygulamalarında kullanıcı deneyimi, sadece verinin doğru olmasıyla değil, aynı zamanda \u003Cstrong>ne kadar hızlı\u003C/strong> ve \u003Cstrong>akıcı\u003C/strong> geldiğiyle de ilgilidir. Kullanıcılar boş ekranlar yerine “bir şeyler oluyor” hissini sever.\u003C/p>\n\u003Cp>İşte bu noktada \u003Cstrong>Progressive JSON\u003C/strong> devreye giriyor.\u003C/p>\n\u003Chr>\n\u003Ch4 id=\"-progressive-json-nedir\">🎯 Progressive JSON Nedir?\u003C/h4>\n\u003Cp>\u003Cstrong>Progressive JSON\u003C/strong>, büyük JSON verilerini kullanıcıya \u003Cstrong>parça parça (stream olarak)\u003C/strong> iletme yöntemidir. Bu, özellikle yavaş ağlarda ya da büyük veri setlerinde kullanıcıya beklemek yerine “veri gelmeye başladı” hissi verir.\u003C/p>\n\u003Cp>Bu teknik genellikle \u003Ccode>application/x-ndjson\u003C/code> yani \u003Cstrong>Newline Delimited JSON\u003C/strong> ile kullanılır. Her satırda bir JSON nesnesi yer alır ve bu satırlar bir akış (stream) halinde gönderilir.\u003C/p>\n\u003Chr>\n\u003Ch4 id=\"-neden-kullanmalıyız\">✅ Neden Kullanmalıyız?\u003C/h4>\n\u003Cul>\n\u003Cli>🔄 \u003Cstrong>Daha hızlı render:\u003C/strong> Tüm veriyi beklemeden ekrana yazdırmaya başlarız.\u003C/li>\n\u003Cli>📡 \u003Cstrong>Gerçek zamanlı his:\u003C/strong> Kullanıcı, sistemin çalıştığını hisseder.\u003C/li>\n\u003Cli>🧱 \u003Cstrong>Modüler veri işleme:\u003C/strong> Gelen her parçayı ayrı ayrı işleyebiliriz.\u003C/li>\n\u003Cli>🧩 \u003Cstrong>Büyük veri desteği:\u003C/strong> Dev JSON dosyaları yerine parça parça iletim sağlar.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch4 id=\"️-expressjs-ve-react-ile-progressive-json-örneği\">⚙️ Express.js ve React ile Progressive JSON Örneği\u003C/h4>\n\u003Cp>Şimdi birlikte küçük ama öğretici bir örnek yapalım:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Backend:\u003C/strong> Express.js ile progressive (stream) JSON verisi sunacağız.\u003C/li>\n\u003Cli>\u003Cstrong>Frontend:\u003C/strong> React ile bu veriyi canlı canlı alıp \u003Cstrong>el yazısı animasyonu\u003C/strong> ile ekrana yazdıracağız.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch4 id=\"-1-expressjs-ile-progressive-json-stream\">🔧 1. Express.js ile Progressive JSON Stream\u003C/h4>\n\u003Cp>\u003Ccode>server.ts\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"tsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> express \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'express'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cors \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'cors'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> app\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> express\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">cors\u003C/span>\u003Cspan style=\"color:#E1E4E8\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/stream'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  res.\u003C/span>\u003Cspan style=\"color:#B392F0\">setHeader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Content-Type'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'application/x-ndjson'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// NDJSON format\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> users\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { id: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, name: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Ali'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { id: \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, name: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Ayşe'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { id: \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, name: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Mehmet'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { id: \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, name: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Zeynep'\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> interval\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> setInterval\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (i \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      clearInterval\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(interval);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      res.\u003C/span>\u003Cspan style=\"color:#B392F0\">end\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Yayını kapat\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      res.\u003C/span>\u003Cspan style=\"color:#B392F0\">write\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(users[i]) \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// NDJSON: her satır ayrı bir JSON\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, \u003C/span>\u003Cspan style=\"color:#79B8FF\">1000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// 1 saniyede bir kullanıcı gönder\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">listen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3001\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Server is running on http://localhost:3001'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"-2-react-ile-progressive-okuma-ve-el-yazısı-gibi-gösterme\">💻 2. React ile Progressive Okuma ve El Yazısı Gibi Gösterme\u003C/h4>\n\u003Cp>Veriyi aldıktan sonra sadece listelemekle kalmayacağız. Her satırı sanki birisi yazıyormuş gibi harf harf ekrana yazdıracağız. Cursor kullanmadan, sade ama etkileyici bir animasyonla.\u003C/p>\n\u003Ch5 id=\"-apptsx--progressive-json-ve-yazı-efektini-birleştirme\">🧠 App.tsx — Progressive JSON ve Yazı Efektini Birleştirme\u003C/h5>\n\u003Ch5 id=\"yazı-efekti\">Yazı Efekti\u003C/h5>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.typewriter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  overflow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">hidden\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  white-space\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">nowrap\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  animation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: typing \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> steps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">30\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">end\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@keyframes\u003C/span>\u003Cspan style=\"color:#FFAB70\"> typing\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  to\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"tsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { useEffect, useState } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  id\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  name\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">users\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">setUsers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[]>([]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  useEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetchStream\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> response\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'http://localhost:3001/stream'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> reader\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response.body?.\u003C/span>\u003Cspan style=\"color:#B392F0\">getReader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> decoder\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> TextDecoder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> buffer \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ''\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      while\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (reader) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">done\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> reader.\u003C/span>\u003Cspan style=\"color:#B392F0\">read\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (done) \u003C/span>\u003Cspan style=\"color:#F97583\">break\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        buffer \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> decoder.\u003C/span>\u003Cspan style=\"color:#B392F0\">decode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value, { stream: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> lines\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> buffer.\u003C/span>\u003Cspan style=\"color:#B392F0\">split\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        buffer \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lines.\u003C/span>\u003Cspan style=\"color:#B392F0\">pop\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">||\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ''\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Son incomplete satırı sakla\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> line\u003C/span>\u003Cspan style=\"color:#F97583\"> of\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lines) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (line.\u003C/span>\u003Cspan style=\"color:#B392F0\">trim\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> json\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">parse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(line);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            setUsers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">prev\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">prev, json]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    fetchStream\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, []);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Kullanıcılar (Stream ile geliyor)&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {users.\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">user\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#B392F0\"> key\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{user.id} \u003C/span>\u003Cspan style=\"color:#B392F0\">className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"typewriter\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            {user.id} - {user.name}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        ))}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> App;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"️-sonuç\">✍️ Sonuç\u003C/h4>\n\u003Cp>Progressive JSON, kullanıcı deneyimini ciddi anlamda iyileştiren güçlü bir tekniktir.\nBunu bir de sade ama estetik bir “el yazısı” animasyonu ile birleştirdiğimizde, çok daha canlı ve etkileyici arayüzler ortaya çıkıyor.\nEğer büyük veri setleriyle çalışıyorsan, kullanıcıya veri aktığını hissettirmek istiyorsan ve aynı zamanda sade bir UI ile fark yaratmak istiyorsan:\u003C/p>\n\u003Cp>🎯 Progressive JSON + Yazı Efekti ikilisi seni çok ileri taşıyacaktır.\u003C/p>",{"headings":193,"localImagePaths":225,"remoteImagePaths":226,"frontmatter":227,"imagePaths":229},[194,197,200,204,207,210,213,216,219,222],{"depth":166,"slug":195,"text":196},"-progressive-json-nedir-expressjs-ve-react-ile-gerçek-zamanlı-uygulama","🚀 Progressive JSON Nedir? Express.js ve React ile Gerçek Zamanlı Uygulama",{"depth":26,"slug":198,"text":199},"bonus-el-yazısı-efektiyle-daha-etkileyici-ui","(Bonus: El Yazısı Efektiyle Daha Etkileyici UI)",{"depth":201,"slug":202,"text":203},4,"-progressive-json-nedir","🎯 Progressive JSON Nedir?",{"depth":201,"slug":205,"text":206},"-neden-kullanmalıyız","✅ Neden Kullanmalıyız?",{"depth":201,"slug":208,"text":209},"️-expressjs-ve-react-ile-progressive-json-örneği","⚙️ Express.js ve React ile Progressive JSON Örneği",{"depth":201,"slug":211,"text":212},"-1-expressjs-ile-progressive-json-stream","🔧 1. Express.js ile Progressive JSON Stream",{"depth":201,"slug":214,"text":215},"-2-react-ile-progressive-okuma-ve-el-yazısı-gibi-gösterme","💻 2. React ile Progressive Okuma ve El Yazısı Gibi Gösterme",{"depth":26,"slug":217,"text":218},"-apptsx--progressive-json-ve-yazı-efektini-birleştirme","🧠 App.tsx — Progressive JSON ve Yazı Efektini Birleştirme",{"depth":26,"slug":220,"text":221},"yazı-efekti","Yazı Efekti",{"depth":201,"slug":223,"text":224},"️-sonuç","✍️ Sonuç",[],[],{"title":183,"description":184,"pubDate":228,"heroImage":186},"Jun 18 2025",[]]